#!/usr/bin/env escript
%% -*- erlang -*-

-include_lib("kernel/include/file.hrl").

%% shamelessly stolen from rebar
main(Args) ->
    
    %% Check for force=1 flag to force a rebuild
    case lists:member("force=1", Args) of
        true ->
            [file:delete(Beam) || Beam <- filelib:wildcard("ebin/*.beam")],
            ok;
        false ->
            ok
    end,
    
    AppVsn =
        %% Make sure file:consult can parse the .app file
        case file:consult("ebin/sutro.app") of
            {ok,[{_,_,Props}]} ->
                proplists:get_value(vsn, Props);
            {error, Reason} ->
                io:format("Invalid syntax in ebin/sutro.app: ~p\n", [Reason]),
                halt(1)
        end,
        
    MakeOpts = [
        {outdir, "ebin"}, 
        {i, "include"},
        {d, 'APP_VSN', AppVsn}
    ],
    %% Compile all src/*.erl to ebin
    case make:files(filelib:wildcard("src/*.erl"), MakeOpts) of
        up_to_date ->
            ok;
        error ->
            io:format("Failed to compile source files!\n"),
            halt(1)
    end,

    %% Add ebin/ to our path
    true = code:add_path("ebin"),

    %% Construct the archive of everything in ebin/ dir -- put it on the
    %% top-level of the zip file so that code loading works properly.
    Files = filelib:wildcard("*", "ebin"),
    case zip:create("mem", Files, [{cwd, "ebin"}, memory]) of
        {ok, {"mem", ZipBin}} ->
            %% Archive was successfully created. Prefix that binary with our
            %% header and write to "sutro" file
            Script = <<"#!/usr/bin/env escript\n", ZipBin/binary>>,
            case file:write_file("sutro", Script) of
                ok ->
                    ok;
                {error, WriteError} ->
                    io:format("Failed to write sutro script: ~p\n", [WriteError]),
                    halt(1)
            end;
        {error, ZipError} ->
            io:format("Failed to construct sutro script archive: ~p\n", [ZipError]),
            halt(1)
    end,

    %% Finally, update executable perms for our script
    file:write_file_info("sutro", #file_info{mode=(8#00700)}),

    %% Add a helpful message
    io:format("Successfully generated a sutro executable in the current working directory~n").
                